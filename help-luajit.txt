luajit -b   test.lua test.out               # Save bytecode to test.out
luajit -bg  test.lua test.out               # Keep debug info
luajit -be  "print('hello world')" test.out # Save cmdline script

luajit -bl  test.lua                        # List to stdout
luajit -bl  test.lua test.txt               # List to test.txt
luajit -ble "print('hello world')"          # List cmdline script

luajit -b   test.lua test.obj               # Generate object file
# Link test.obj with your application and load it with require("test")

#Writing a shared C++ library and loading it in LuaJIT
#https://csl.name/post/luajit-cpp/

luasql = require "luasql.mysql"

cur = assert (con:execute("INSERT INTO `table`(`col_int`,`col_varchar`) VALUES (9,'Hi')"))

apt install -y nginx-extras

apt install -y lua-sql-mysql
apt install -y lua-sql-sqlite3
apt install -y lua-sql-postgres
apt install -y libmysqlclient-dev

lua-sql-mysql-dev
lua-sql-sqlite3-dev
lua-sql-postgres-dev
